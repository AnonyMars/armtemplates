{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
        //
        //PARAMS GLOBAUX
        //
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "locationName": {
            "type": "string"
        },
        "tenant": {
            "type": "string"
        },
        //
        //PARAMS DU VAULT
        //
        "Vaultname": {
            "type": "string"
        },
        
        "Vaultsku": {
            "type": "string"
        },
        "VaultaccessPolicies": {
            "type": "array"
        },
        
        "VaultenabledForDeployment": {
            "type": "bool"
        },
        "VaultenabledForTemplateDeployment": {
            "type": "bool"
        },
        "VaultenabledForDiskEncryption": {
            "type": "bool"
        },
        "VaultenableRbacAuthorization": {
            "type": "bool"
        },
        "VaultenableSoftDelete": {
            "type": "bool"
        },
        "VaultsoftDeleteRetentionInDays": {
            "type": "int"
        },
        "VaultnetworkAcls": {
            "type": "object"
        },

        //
        //PARAMS DU CONTAINER REGISTRY
        //
        "ConRegregistryName": {
            "type": "string"
        },
        "ConRegregistryLocation": {
            "type": "string"
        },
        "ConRegzoneRedundancy": {
            "type": "string"
        },
        "ConRegregistrySku": {
            "type": "string"
        },
        "ConRegregistryApiVersion": {
            "type": "string"
        },
        "ConRegtags": {
            "type": "object"
        },
        "ConRegpublicNetworkAccess": {
            "type": "string"
        },

        //
        //PARAMS DU VNET
        //

        //Inutilisé ici
        // "VnetextendedLocation": {
        //     "type": "object"
        // },
        "VnetvirtualNetworkName": {
            "type": "string"
        },
        "VnetresourceGroup": {
            "type": "string"
        },
        "VnetaddressSpaces": {
            "type": "array"
        },
        "Vnetipv6Enabled": {
            "type": "bool"
        },
        "VnetsubnetCount": {
            "type": "int"
        },
        "Vnetsubnet0_name": {
            "type": "string"
        },
        "Vnetsubnet0_addressRange": {
            "type": "string"
        },
        "VnetddosProtectionPlanEnabled": {
            "type": "bool"
        },
        "VnetfirewallEnabled": {
            "type": "bool"
        },
        "VnetbastionEnabled": {
            "type": "bool"
        },

        //
        //PARAMS DU IOTHUB
        //
        "IOThubname": {
            "type": "string"
        },
        "IOTsku_name": {
            "type": "string"
        },
        "IOTsku_units": {
            "type": "string"
        },
        "IOTd2c_partitions": {
            "type": "string"
        },
        "IOTfeatures": {
            "type": "string"
        },
        "IOTtags": {
            "type": "object"
        },
        "IOTcloudEnvironment": {
            "type": "string",
            "metadata": {
                "description": "Cloud environment to deploy (i.e. usgov/china/ ...)"
            },
            "allowedValues": [
                "public",
                "china",
                "usgov"
            ],
            "defaultValue": "public"
        },
        "IOTprincipalId": {
            "type": "string"
        },
        "IOTroleDefinitionId": {
            "type": "string"
        },

        //
        //PARAMS DU DPS
        //
        "provisioningServices_dps_name": {
            //"defaultValue": "Exa-iot-dps",
            "type": "String"
        },


        //
        //PARAMS DU APP INSIGHT
        //

        "AppInsightname": {
            "type": "string"
        },
        "AppInsighttype": {
            "type": "string"
        },
        "AppInsightregionId": {
            "type": "string"
        },
        "AppInsighttagsArray": {
            "type": "object"
        },
        "AppInsightrequestSource": {
            "type": "string"
        },
        "AppInsightworkspaceResourceId": {
            "type": "string"
        },






        //
        //PARAMS DE LA COSMOS DB
        //

        "CosmosDBname": {
            "type": "string"
        },
        
        "defaultExperience": {
            "type": "string"
        },
        "isZoneRedundant": {
            "type": "string"
        },

        //
        //PARAMS DE L'AKS
        //
        
        "aksClusterName": {
            "type": "string"
        },

         "kubeversion": {
            "type": "string"
        },
        
        "dnsPrefix": {
            "type": "string"
        },
        "agentPoolname": {
            "type": "string"
        },
        "agentPoolcount": {
            "type": "int"
        },
        "agentPoolvmSize": {
            "type": "string"
        },
        "agentPoolosType": {
            "type": "string"
        },
        "agentPoolstorageProfile": {
            "type": "string"
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Taille de disque (en Gio) à provisionner pour chacun des nœuds du pool d'agents. Cette valeur est comprise entre 0 et 1023. La valeur 0 applique la taille de disque par défaut pour cet agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Plug-in réseau utilisé pour la création du réseau Kubernetes."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicateur booléen à activer/désactiver pour RBAC."
            }
        },
        "vmssNodePool": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Indicateur booléen à activer/désactiver pour les groupes de machines virtuelles identiques"
            }
        },
        "windowsProfile": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Indicateur booléen à activer/désactiver pour les groupes de machines virtuelles identiques"
            }
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Activez l'accès réseau privé au cluster Kubernetes."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Indicateur booléen à activer/désactiver pour le routage des applications HTTP."
            }
        },
        "enableAzurePolicy": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Indicateur booléen à activer/désactiver pour le composant additionnel Azure Policy."
            }
        },
        "acrName": {
            "type": "string",
            "metadata": {
                "description": "Spécifiez le nom du registre de conteneurs Azure."
            }
        },
        "acrResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Nom du groupe de ressources auquel le registre de conteneurs est associé."
            },
            "defaultValue":"Exa-IOT"
        },
        "guidValue": {
            "type": "string",
            "metadata": {
                "description": "ID unique utilisé dans l'attribution de rôle du service Kubernetes au service Container Registry. Nous vous recommandons d'utiliser la valeur par défaut."
            },
            "defaultValue": "[newGuid()]"
        },

        //
        //PARAMS DE L'APP FUNCTION
        //
        "FunctionsubscriptionId": {
            "type": "string"
        },
        "Functionname": {
            "type": "string"
        },
        "FunctionhostingPlanName": {
            "type": "string"
        },
        "FunctionserverFarmResourceGroup": {
            "type": "string"
        },
        "FunctionalwaysOn": {
            "type": "bool"
        },
        "Functionuse32BitWorkerProcess": {
            "type": "bool"
        },
        "FunctionstorageAccountName": {
            "type": "string"
        },
        "FunctionnetFrameworkVersion": {
            "type": "string"
        },
        "Functionsku": {
            "type": "string"
        },
        "FunctionskuCode": {
            "type": "string"
        },
        "FunctionworkerSize": {
            "type": "string"
        },
        "FunctionworkerSizeId": {
            "type": "string"
        },
        "FunctionnumberOfWorkers": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {},
    "resources": [

        //{         
        //###################################################   CREATION DU RESOURCE GROUP ######################
        //
        //     "name": "Exa-IOT",
        //     "type": "Microsoft.Resources/resourceGroups",
        //     "apiVersion": "2021-05-01",
        //     "location": "[parameters('location')]",
        //     "dependsOn": [],
        //     "tags": {}
        // },
        {
            //CREATION DU VAULT
            //IL NE NECESSITE PAS DE RESOURCE GROUP  DONC FAIRE GAFFE A BIEN LE DELETE A LA MANO
            "apiVersion": "2019-09-01",
            "name": "[parameters('Vaultname')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": "[parameters('VaultenabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('VaultenabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('VaultenabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('VaultenableRbacAuthorization')]",
                "accessPolicies": "[parameters('VaultaccessPolicies')]",
                "tenantId": "[parameters('tenant')]",
                "sku": {
                    "name": "[parameters('Vaultsku')]",
                    "family": "A"
                },
                "enableSoftDelete": "[parameters('VaultenableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('VaultsoftDeleteRetentionInDays')]",
                "networkAcls": "[parameters('VaultnetworkAcls')]"
            },
            "tags": {},
            "dependsOn": []
        },
        {
            

        //
        //###################################################   CREATION DU REPO POUR LES IMAGES DOCKERS ######################
        //
        //IL NE NECESSITE PAS DE RESOURCE GROUP  DONC FAIRE GAFFE A BIEN LE DELETE A LA MANO
            "name": "[parameters('ConRegregistryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "location": "[parameters('ConRegregistryLocation')]",
            "apiVersion": "[parameters('ConRegregistryApiVersion')]",
            "sku": {
                "name": "[parameters('ConRegregistrySku')]"
            },
            "dependsOn": [],
            "tags": "[parameters('ConRegtags')]",
            "properties": {
                "publicNetworkAccess": "[parameters('ConRegpublicNetworkAccess')]",
                "zoneRedundancy": "[parameters('ConRegzoneRedundancy')]"
            }
        },
            

        //
        //###################################################   CREATION DU VNET ######################
        //
            
            {
            "name": "[parameters('VnetvirtualNetworkName')]",
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2021-01-01",
            "location": "[parameters('location')]",
            //"extendedLocation": "[if(empty(parameters('VnetextendedLocation')), json('null'), parameters('VnetextendedLocation'))]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "INFRA",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    }
                ],
                "enableDdosProtection": "[parameters('VnetddosProtectionPlanEnabled')]"
                
            }
        },


        //
        //###################################################   CREATION DE l'AKS ######################
        //


         {
            "name": "[concat('K8S',parameters('aksClusterName'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('acrResourceGroup')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
                            "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/', parameters('guidValue'))]",
                            "properties": {
                                "principalId": "[reference(parameters('aksClusterName'), '2021-07-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "scope": "[resourceId(parameters('acrResourceGroup'),'Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2021-07-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('aksClusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubeversion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "[parameters('agentPoolname')]",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentPoolcount')]",
                        "enableAutoScaling": false,
                        "vmSize": "[parameters('agentPoolvmSize')]",
                        "osType": "[parameters('agentPoolosType')]",
                        "storageProfile": "[parameters('agentPoolstorageProfile')]",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": [],
                        "enableNodePublicIP": false,
                        "tags": {}
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "azurepolicy": {
                        "enabled": "[parameters('enableAzurePolicy')]"
                    }
                }
            },
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            }
        },

         
        //
        //CREATION DE l'IOT HUB
        //
        {
            "apiVersion": "2021-07-01-preview",
            "type": "Microsoft.Devices/IotHubs",
            "name": "[parameters('IOThubname')]",
            "location": "[parameters('location')]",
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": "[parameters('IOTd2c_partitions')]"
                    }
                },
                "features": "[parameters('IOTfeatures')]",
                "minTlsVersion": "1.2",
                "disableLocalAuth": false
            },
            "sku": {
                "name": "[parameters('IOTsku_name')]",
                "capacity": "[parameters('IOTsku_units')]"
            },
            "tags": "[parameters('IOTtags')]"
        },

        //
        //CREATION DU DPS
        //

        {
            "type": "Microsoft.Devices/provisioningServices",
            "apiVersion": "2021-10-15",
            "name": "[parameters('provisioningServices_dps_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "state": "Active",
                "provisioningState": "Succeeded",
                //lier automatiquement au iothub
                "iotHubs": [],
                "allocationPolicy": "Hashed"
            }
        },


        ///
        ///CREATION DE L'APP INSIGHT
        ///    

        {
            "name": "[parameters('AppInsightname')]",
            "type": "microsoft.insights/components",
            "location": "[parameters('AppInsightregionId')]",
            "tags": "[parameters('AppInsighttagsArray')]",
            "apiVersion": "2020-02-02-preview",
            "dependsOn": [
                "NewWorkspaceTemplate"
            ],
            "properties": {
                "ApplicationId": "[parameters('AppInsightname')]",
                "Application_Type": "[parameters('AppInsighttype')]",
                "Flow_Type": "Redfield",
                "Request_Source": "[parameters('AppInsightrequestSource')]",
                "WorkspaceResourceId": "[parameters('AppInsightworkspaceResourceId')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "NewWorkspaceTemplate",
            "resourceGroup": "DefaultResourceGroup-EUS",
            "subscriptionId": "46f6d2e7-4c2e-42f9-bd7e-3fe6c38a0bdb",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2020-08-01",
                            "name": "DefaultWorkspace-46f6d2e7-4c2e-42f9-bd7e-3fe6c38a0bdb-EUS",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "location": "[parameters('location')]",
                            "properties": {}
                        }
                    ]
                }
            }
        },


        //
        //CREATION DE LA COSMOS DB
        //

        {
            "apiVersion": "2021-10-15-preview",
            "kind": "GlobalDocumentDB",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[parameters('CosmosDBname')]",
            "location": "[parameters('location')]",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "id": "[concat(parameters('CosmosDBname'), '-', parameters('location'))]",
                        "failoverPriority": 0,
                        "locationName": "[parameters('locationName')]"
                    }
                ],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "ipRules": [],
                "dependsOn": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "enableFreeTier": false
            },
            "tags": {
                "defaultExperience": "[parameters('defaultExperience')]",
                "hidden-cosmos-mmspecial": ""
            }
        },

        //
        // Création de l'APP FUNCTION
        //
        
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('Functionname')]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('FunctionhostingPlanName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('FunctionstorageAccountName'))]"
            ],
            "properties": {
                "name": "[parameters('Functionname')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "e042fc9f-94c9-4d2a-8c96-3e49e0c30558"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "InstrumentationKey=e042fc9f-94c9-4d2a-8c96-3e49e0c30558;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('FunctionstorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('FunctionstorageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('FunctionstorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('FunctionstorageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(parameters('Functionname')), 'ac0e')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": "[parameters('Functionuse32BitWorkerProcess')]",
                    "netFrameworkVersion": "[parameters('FunctionnetFrameworkVersion')]"
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('FunctionsubscriptionId'),'/resourcegroups/', parameters('FunctionserverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('FunctionhostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('FunctionhostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "name": "[parameters('FunctionhostingPlanName')]",
                "workerSize": "[parameters('FunctionworkerSize')]",
                "workerSizeId": "[parameters('FunctionworkerSizeId')]",
                "numberOfWorkers": "[parameters('FunctionnumberOfWorkers')]"
            },
            "sku": {
                "Tier": "[parameters('Functionsku')]",
                "Name": "[parameters('FunctionskuCode')]"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('FunctionstorageAccountName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
            }
        }
        
        
        
    ],
    "outputs": {

 "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]"
        }

    }
}